parameters:
  - name: external_id
    in: path
    description: External ID of the existing subscription
    required: true
    schema:
      type: string
      example: "5eb02857-a71e-4ea2-bcf9-57d3a41bc6ba"
get:
  tags:
    - subscriptions
  summary: Retrieve a subscription
  description: This endpoint retrieves a specific subscription.
  operationId: findSubscription
  parameters:
    - name: status
      in: query
      description: |
        By default, this endpoint only return `active` subscriptions. If you want to retrieve a subscription with a different `status`, you can specify it here.

        _Note: As there may exists multiple `canceled` or `terminated` subscribtions for the same `external_id`, it is recommended to use the "List all subscriptions" endpoint to retrieve those subscriptions._
      required: false
      schema:
        type: string
        enum:
          - active
          - terminated
          - pending
          - canceled
        example: active
        default: active
  responses:
    "200":
      description: Subscription
      content:
        application/json:
          schema:
            $ref: "../schemas/Subscription.yaml"
    "401":
      $ref: "../responses/Unauthorized.yaml"
    "404":
      $ref: "../responses/NotFound.yaml"
put:
  tags:
    - subscriptions
  summary: Update a subscription
  description: This endpoint allows you to update a subscription.
  operationId: updateSubscription
  requestBody:
    description: Update an existing subscription
    content:
      application/json:
        schema:
          $ref: "../schemas/SubscriptionUpdateInput.yaml"
    required: true
  parameters:
    - name: status
      in: query
      description: |
        By default, this endpoint only return `active` subscriptions. If you want to update a subscription with a different `status`, you can specify it here.
      required: false
      schema:
        type: string
        enum:
          - active
          - pending
        example: active
        default: active
  responses:
    "200":
      description: Subscription updated
      content:
        application/json:
          schema:
            $ref: "../schemas/Subscription.yaml"
    "400":
      $ref: "../responses/BadRequest.yaml"
    "401":
      $ref: "../responses/Unauthorized.yaml"
    "404":
      $ref: "../responses/NotFound.yaml"
    "422":
      $ref: "../responses/UnprocessableEntity.yaml"
delete:
  tags:
    - subscriptions
  summary: Terminate a subscription
  description: This endpoint allows you to terminate a subscription.
  operationId: destroySubscription
  parameters:
    - name: status
      in: query
      description: If the field is not defined, Lago will terminate only `active` subscriptions. However, if you wish to cancel a `pending` subscription, please ensure that you include `status=pending` in your request.
      required: false
      explode: true
      schema:
        type: string
        example: "pending"
    - name: on_termination_credit_note
      in: query
      description: |
        When a pay-in-advance subscription is terminated before the end of its billing period, we generate a credit note for the unused subscription time by default.
        This field allows you to control the behavior of the credit note generation:

        - `credit`: A credit note is generated for the unused subscription time. The unused amount is credited back to the customer.
        - `refund`: A credit note is generated for the unused subscription time. If the invoice is paid or partially paid, the unused paid amount is refunded; any unpaid unused amount is credited back to the customer.
        - `skip`: No credit note is generated for the unused subscription time.

        _Note: This field is only applicable to pay-in-advance plans and is ignored for pay-in-arrears plans._
      required: false
      schema:
        type: string
        enum:
          - credit
          - refund
          - skip
        example: "credit"
    - name: on_termination_invoice
      in: query
      description: |
        When a subscription is terminated before the end of its billing period, we generate an invoice for the unbilled usage.
        This field allows you to control the behavior of the invoice generation:

        - `generate`: An invoice is generated for the unbilled usage.
        - `skip`: No invoice is generated for the unbilled usage.
      required: false
      schema:
        type: string
        enum:
          - generate
          - skip
        example: "generate"
  responses:
    "200":
      description: Subscription terminated
      content:
        application/json:
          schema:
            $ref: "../schemas/Subscription.yaml"
    "401":
      $ref: "../responses/Unauthorized.yaml"
    "404":
      $ref: "../responses/NotFound.yaml"
    "422":
      $ref: "../responses/UnprocessableEntity.yaml"
